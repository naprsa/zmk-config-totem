//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define BASE 0
#define MATH 1
#define SYMB 2
#define ADJU  3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <23 24>;
        };
    };

    behaviors {
        bckspcdel: bckspcdel {
            compatible = "zmk,behavior-mod-morph";
            label = "BCKSPCDEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <170>;
            bindings = <&kp>, <&kp>;
        };

        num_layer_parenthesis: num_layer_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_LAYER_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        num_layer_brackets: num_layer_brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_LAYER_BRACKETS";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        num_layer_braces: num_layer_braces {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_LAYER_BRACES";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        cmd_esc: cmd_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_ESC";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp ESC>;

            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "BASE";
            bindings = <
                 &kp Q  &kp W            &kp E         &kp R                       &kp T        &kp Y    &kp U         &kp I         &kp O        &kp P
                 &kp A  &hrm LEFT_ALT S  &hrm LCTRL D  &hrm LSHFT F                &kp G        &kp H    &hrm RSHFT J  &hrm RCTRL K  &hrm RGUI L  &hrm RALT SEMICOLON
&kh_hs_tapdance  &kp Z  &kp X            &kp C         &kp V                       &kp B        &kp N    &kp M         &kp COMMA     &kp DOT      &kp FSLH             &kp SQT
                                         &cmd_esc      &mt LA(LS(LEFT_GUI)) SPACE  &lt 1 TAB    &kp RET  &bckspcdel    &mo 2
            >;
        };

        Num {
            label = "NUM";
            bindings = <
        &trans  &trans    &trans          &trans             &kp MINUS          &num_layer_braces       &kp N7                     &kp N8  &kp N9  &kp MINUS
        &trans  &kp LEFT  &kp UP_ARROW    &kp RIGHT_ARROW    &kp LEFT_SHIFT     &num_layer_parenthesis  &hrm RIGHT_SHIFT NUMBER_4  &kp N5  &kp N6  &kp EQUAL
&trans  &trans  &trans    &kp DOWN_ARROW  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &num_layer_brackets     &kp N1                     &kp N2  &kp N3  &kp NON_US_BACKSLASH  &kp GRAVE
                          &trans          &trans             &trans             &kp LEFT_ALT            &kp RIGHT_GUI              &kp N0
            >;
        };

        navi {
            bindings = <
       &none   &none   &none   &none   &kp K_MUTE           &kp K_UNDO  &kp PAGE_DOWN  &trans          &kp PG_UP  &none
       &trans  &trans  &trans  &trans  &kp C_VOLUME_UP      &kp HOME    &kp LEFT       &kp UP_ARROW    &kp RIGHT  &kp END
&none  &none   &none   &none   &trans  &kp C_VOLUME_DOWN    &kp K_REDO  &none          &kp DOWN_ARROW  &none      &none    &none
                       &none   &trans  &mo 3                &trans      &none          &none
            >;
        };

        func {
            label = "ADJU";
            bindings = <
        &trans  &kp F9  &kp F10  &kp F11  &kp F12    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
        &trans  &kp F5  &kp F6   &kp F7   &kp F8     &kp C_BRI_UP  &trans        &trans        &trans        &trans
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4     &kp C_BRI_DN  &trans        &trans        &trans        &trans        &trans
                        &trans   &trans   &trans     &trans        &trans        &trans
            >;
        };
    };
};
